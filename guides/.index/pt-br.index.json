{
  "articles": {
    "khZSiGFSAtdV": {
      "id": "khZSiGFSAtdV",
      "path": "managing-teams",
      "author": {
        "name": "Square Cloud"
      },
      "metadata": {
        "title": "Gerenciando Suas Equipes na Square Cloud",
        "description": "Aprenda como funciona o sistema de equipes e como gerenciar suas equipes",
        "slug": "gerenciando-suas-equipes-na-square-cloud"
      },
      "created_at": "2025-05-30T20:43:28.000Z",
      "updated_at": "2025-05-30T20:43:28.000Z",
      "content": "## Introdução\n\n- Antes de começar, você precisará criar uma conta no Square Cloud, o que pode ser feito através da [página de cadastro](https://squarecloud.app/signup). Você pode usar seu e-mail para criar uma conta.\n- Por fim, é necessário ter um plano pago ativo em sua conta. Você pode ver nossos planos e adquiri-los [aqui](https://squarecloud.app/pricing).\n\n## Criando Seu Time\n\nPara criar seu time, você deve acessar o [dashboard](https://squarecloud.app/dashboard), clicar no seu perfil e escolher a opção \"Create a Team\". Por fim, basta escolher o nome do seu time e confirmar. Assim, ele será criado e você poderá acessá-lo novamente selecionando seu perfil e escolhendo o time desejado.\n\n![Create Team Image](https://mintlify.s3.us-west-1.amazonaws.com/squarecloud/images/articles/teams/create-team.png)\n\n## Adicionando Membros ao Time\n\nPara adicionar um novo membro ao time, siga estes passos:\n\n- **Primeiro passo**\\\n  Peça ao usuário que deseja adicionar para acessar a [página de configurações](https://squarecloud.app/account) e acionar o botão `request team code`. Em seguida, ele deve enviar o código de conta gerado a você. Lembre-se de que esse código só pode ser usado uma vez e expira após **5 minutos**.\n\n- **Segunda passo**\\\n  Acesse o [dashboard](https://squarecloud.app/dashboard), navegue até seu perfil e selecione o time ao qual deseja adicionar o usuário. Depois, vá para a aba \"Members\", clique no botão \"Invite a member\" e insira o código de conta do usuário que você deseja convidar.\r\n  ![Second Step](https://mintlify.s3.us-west-1.amazonaws.com/squarecloud/images/articles/teams/add-member.gif)\n\n<Alert intent=\"info\" title=\"Compartilhe seu código de conta apenas com pessoas de sua confiança.\" />\n\n### Funções\n\nCada membro do time possui uma função que fornece permissões específicas para ações nas aplicações. A seguir, veja a lista de permissões:\n\n<AccordionGroup>\n  <Accordion title=\"View\" icon={<Icon name=\"eye\" />}>\n    Pode visualizar painéis, métricas, logs e alertas do sistema para monitorar a integridade e desempenho gerais.\n  </Accordion>\n\n  <Accordion title=\"Manager\" icon={<Icon name=\"joystick\" />}>\n    Além das permissões de visualização, pode controlar o ciclo de vida das aplicações iniciando, parando e reiniciando serviços.\n  </Accordion>\n\n  <Accordion title=\"Maintain\" icon={<Icon name=\"wall\" />}>\n    Além das permissões de manager, pode fazer upload, download e editar arquivos e configurações das aplicações.\n  </Accordion>\n\n  <Accordion title=\"Admin\" icon={<Icon name=\"user-gear\" />}>\n    Possui acesso total, incluindo visualizar métricas, gerenciar aplicações, editar arquivos, acessar dados confidenciais e realizar backups e restaurações do sistema.\n  </Accordion>\n</AccordionGroup>\n\n<Alert intent=\"info\" title=\"Apenas a função Admin pode visualizar arquivos como `.env`, `.env.production` e o arquivo de configuração (`squarecloud.app/.config`).\" />\n\n## Adicionando Aplicações ao Time\n\nPara adicionar aplicações ao seu time, siga estes passos:\n\n- **Primero Passo**\\\n  Acesse o time ao qual deseja adicionar uma nova aplicação.\r\n  ![First Step](https://mintlify.s3.us-west-1.amazonaws.com/squarecloud/images/articles/teams/team.gif)\n\n- **Segundo Passo**\\\n  Clique em \"Add new\" e selecione a aplicação que deseja adicionar ao time escolhido.\r\n  ![Second Step](https://mintlify.s3.us-west-1.amazonaws.com/squarecloud/images/articles/teams/add-app.gif)\n\n<Alert intent=\"warning\" title=\"Apenas o proprietário do time pode adicionar aplicações.\" />\n\nSe você continuar enfrentando problemas, não hesite em [entrar em contato com nossa equipe de suporte](/company/support).\n"
    },
    "RuhBYxAxVJqj": {
      "id": "RuhBYxAxVJqj",
      "path": "deploys/how-to-deploy-flask",
      "author": {
        "name": "Square Cloud"
      },
      "metadata": {
        "title": "Como subir uma aplicação Flask",
        "description": "Aprenda como enviar sua aplicação Flask",
        "slug": "como-subir-uma-aplicacao-flask"
      },
      "created_at": "2025-05-30T00:14:55.000Z",
      "updated_at": "2025-05-30T16:46:52.000Z",
      "content": "## 🚀 Introdução\n\n- Antes de começar, certifique-se de ter o Python instalado no seu sistema. Caso ainda não tenha, você pode baixá-lo no [site oficial do Python](https://www.python.org/).\n- Em seguida, você precisará criar uma conta na Square Cloud, o que pode ser feito através da [página de login](https://squarecloud.app/login). Você pode usar seu e-mail para criar sua conta.\n- Por fim, é necessário ter um plano pago ativo na sua conta. Você pode visualizar nossos planos e adquirir aquele que melhor atenda às suas necessidades [aqui](https://squarecloud.app/plans).\n\n## 💻 Preparando sua aplicação\n\n### 📖 Dependências\n\n#### 📝 Criando o arquivo requirements.txt\n\nPara criar seu arquivo requirements.txt, você precisa listar todas as suas dependências no corpo do arquivo.\r\nVeja como ficaria ele possuindo as dependências Flask e waitress.\n\nflask\r\nwaitress\n\nNote que apenas listando assim, o gerenciador de pacotes instalará a versão mais recente do pacote.\r\nCaso queira uma versão específica, passe dois sinais de igual e o numero da versão correspondente.\n\nflask==3.1.0\r\nwaitress==3.0.2\n\nSe você utilizar do comando `pip freeze`, serão listados além da suas dependências, as dependências delas.\r\nExemplificando, se você possui o `discord-py` instalado como dependência, o pip listará o `aiohttp` que é uma dependência da\r\nbiblioteca discord-py. Isso gera um arquivo mais extenso desnecessáriamente e se utilizado no ambiente global, pode haver\r\ndependências desnecessárias vindas de outros projetos.\n\n<Snippet src=\"_snippets/requirements-txt\" />\n\n### 📂 Arquivos necessários\n\nEnquanto prepara seu projeto para envio, certifique-se de incluir, além do seu código, o `squarecloud.app/config` e o seu arquivo de dependencia previamente preparado.\r\nVocê pode encontrar mais informações sobre como criar o `squarecloud.app/config` [aqui](https://docs.squarecloud.app/getting-started/config-file). Caso envie através de nosso dashboard, não é necessário criar\r\no arquivo de configuração previamente basta compactar o código e o arquivo de dependências.\n\n### ⚙️ Configurando o webserver\n\nPara configurar seu webserver waitress, é necessário que modifique seu código para que fique semelhante ao seguinte.\n\n```python\nfrom flask import Flask\r\n# Import serve function from Waitress\r\nfrom waitress import serve\r\n\r\n# Instância da aplicação flask\r\napp = Flask(__name__)\r\n\r\n# Suas rotas...\r\n\r\n# Serve a aplicação com host 0.0.0.0 (todas interfaces) e porta 80\r\nserve(app, host='0.0.0.0', port=80)\n```\n\n## ☁️ Enviando o projeto\n\nCompacte todos os arquivos de código necessários, arquivos de dependências e de configuração. Após isso, anexe o zip na [página de upload](https://squarecloud.app/dashboard/upload)\r\nou envie utilizando de nossa API.\n"
    },
    "eAnvDXUoHxtZ": {
      "id": "eAnvDXUoHxtZ",
      "path": "deploys/how-to-deploy-nextjs",
      "author": {
        "name": "Square Cloud"
      },
      "metadata": {
        "title": "Como subir uma aplicação Next",
        "description": "Aprenda como enviar sua aplicação Next",
        "slug": "como-subir-uma-aplicacao-next"
      },
      "created_at": "2025-05-30T00:14:55.000Z",
      "updated_at": "2025-05-30T00:14:55.000Z",
      "content": "## 🚀 Introdução\n\n- Você precisará criar uma conta na Square Cloud, o que pode ser feito através da [página de login](https://squarecloud.app/login). Você pode usar seu e-mail para criar sua conta.\n- Por fim, é necessário ter um plano pago ativo na sua conta. Você pode visualizar nossos planos e adquirir aquele que melhor atenda às suas necessidades [aqui](https://squarecloud.app/plans).\n\n## 💻 Preparando aplicação\n\n### 🗑️ Arquivos desnecessários\n\nOs seguintes arquivos nunca devem ser enviados junto à sua aplicação next:\n\n- `node_modules`;\n- `package-lock.json`;\n- `.next`;\n\n### 📖 Dependências\n\nÉ importante que mantenha todas as dependências necessárias no campo \"dependencies\" do `package.json`. Em um ambiente de produção,\r\ntodas as dependencias de desenvolvimento, as \"devDependencies\", não são instaladas.\n\n### ⚙️ Configurando o webserver\n\nPara configurar corretamente o webserver next, você precisa informar a porta 80 no comando de \"start\" do next em seu package.json.\r\nConfira um exemplo de package.json com os scripts corretos abaixo.\n\n```json\n{\r\n  \"name\": \"my-app\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"dev\": \"next dev\",\r\n    \"build\": \"next build\",\r\n    \"start\": \"next start -p 80\",\r\n    \"lint\": \"next lint\"\r\n  },\r\n  \"dependencies\": {\r\n    \"react\": \"^18\",\r\n    \"react-dom\": \"^18\",\r\n    \"next\": \"14.1.0\",\r\n    \"autoprefixer\": \"^10.0.1\",\r\n    \"postcss\": \"^8\",\r\n    \"tailwindcss\": \"^3.3.0\",\r\n    \"eslint\": \"^8\",\r\n    \"eslint-config-next\": \"14.1.0\"\r\n  },\r\n}\n```\n\n## ☁️ Enviando o projeto\n\n### Configuração\n\nEm seu arquivo `squarecloud.app/config`, precisam ser informados os campos START e SUBDOMAIN contendo respectivamente,\r\n`npm run build && npm run start` e o subdomínio desejado.\n\n### 📦 Envio da aplicação\n\nNa [página de upload](https://squarecloud.app/dashboard/upload), anexe o zip que contém todo o necessário e confirme a configuração citada no tópico anterior. E pronto,\r\nassim você hospedou sua aplicação next.\n"
    },
    "siYjfAtAynUS": {
      "id": "siYjfAtAynUS",
      "path": "deploys/how-to-deploy-react",
      "author": {
        "name": "Square Cloud"
      },
      "metadata": {
        "title": "Como subir uma aplicação React",
        "description": "Aprenda como enviar sua aplicação React",
        "slug": "como-subir-uma-aplicacao-react"
      },
      "created_at": "2025-05-30T00:14:55.000Z",
      "updated_at": "2025-05-30T00:14:55.000Z",
      "content": "## 🚀 Introdução\n\n- Você precisará criar uma conta na Square Cloud, o que pode ser feito através da [página de login](https://squarecloud.app/login). Você pode usar seu e-mail para criar sua conta.\n- Por fim, é necessário ter um plano pago ativo na sua conta. Você pode visualizar nossos planos e adquirir aquele que melhor atenda às suas necessidades [aqui](https://squarecloud.app/plans).\n\n## 💻 Preparando aplicação\n\n### 🗑️ Arquivos desnecessários\n\nOs seguintes arquivos nunca devem ser enviados junto à sua aplicação react:\n\n- `node_modules`;\n- `package-lock.json`;\n\n### 📖 Dependências\n\nÉ importante que mantenha todas as dependências necessárias no campo \"dependencies\" do `package.json`. Em um ambiente de produção,\r\ntodas as dependencias de desenvolvimento, as \"devDependencies\", não são instaladas. Neste artigo, usaremos para servir os arquivos de\r\nprodução a biblioteca \"serve\", portanto é necessário instalar a mesma.\n\n```bash\nnpm install serve@latest\n```\n\n<Alert intent=\"info\" title=\"Outras opções\" description=\"Você pode optar por gerenciar a sua aplicação react utilizando de outros frameworks, como: Vite ou Next.\" />\n\n## ⚙️ Configurando o webserver\n\nPara configurar corretamente o webserver, você precisa informar a porta 80 no comando de \"start:prod\" do serve em seu package.json.\r\nConfira um exemplo de package.json com os scripts corretos abaixo.\n\n```json\n{\r\n  \"name\": \"my-react-app\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@testing-library/jest-dom\": \"^5.17.0\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^13.5.0\",\r\n    \"react\": \"^18.3.1\",\r\n    \"react-dom\": \"^18.3.1\",\r\n    \"react-scripts\": \"5.0.1\",\r\n    \"serve\": \"^14.2.4\",\r\n    \"web-vitals\": \"^2.1.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"start:prod\": \"serve -s build -l 80\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  }\r\n}\n```\n\n## ☁️ Enviando o projeto\n\n### Configuração\n\nEm seu arquivo `squarecloud.app/config`, precisam ser informados os campos START e SUBDOMAIN contendo respectivamente,\r\n`npm run build && npm run start:prod` e o subdomínio desejado.\n\n### 📦 Envio da aplicação\n\nNa [página de upload](https://squarecloud.app/dashboard/upload), anexe o zip que contém todo o necessário e confirme a configuração citada no tópico anterior. E pronto,\r\nassim você hospedou sua aplicação react.\n"
    },
    "EXynVFQcvkkg": {
      "id": "EXynVFQcvkkg",
      "path": "deploys/how-to-deploy-vite",
      "author": {
        "name": "Square Cloud"
      },
      "metadata": {
        "title": "Como subir uma aplicação Vite",
        "description": "Aprenda como enviar sua aplicação Vite",
        "slug": "como-subir-uma-aplicacao-vite"
      },
      "created_at": "2025-05-30T00:14:55.000Z",
      "updated_at": "2025-05-30T16:46:52.000Z",
      "content": "## 🚀 Introdução\n\n- Você precisará criar uma conta na Square Cloud, o que pode ser feito através da <a href={pages.login}>pagina de login</a>. Você pode usar seu e-mail, Discord ou ambos para criar sua conta.\n- Por fim, é necessário ter um plano pago ativo na sua conta. Você pode visualizar nossos planos e adquirir aquele que melhor atenda às suas necessidades <a href={pages.plans}>aqui</a>.\n\n## 💻 Preparando aplicação\n\nAtualmente existem duas maneiras de se hospedar websites gerenciados pelo vite, uma delas é utilizar do comando de `vite preview`\r\ne a outra é efetuar o build e enviar apenas os arquivos estáticos. As duas formas serão abordadas a seguir.\n\n### 🗑️ Arquivos desnecessários\n\nÀ depender do modo de envio, você terá arquivos específicos para enviar. Contudo, de maneira geral, os seguintes arquivos nunca devem ser\r\nenviados junto à sua aplicação:\n\n- `node_modules`;\n- `package-lock.json`.\n\n## Envio com build local\n\nEsta forma de envio requer primeiramente realizar o build de sua aplicação vite em seu ambiente local. Para realização de tal tarefa\r\nsiga o passo a passo.\n\n- Abra o terminal na raiz de seu projeto;\n- Execute o comando `npm run build` que executará o script `build` definido no `package.json`, `vite build`;\n\nIsto gerará a pasta `dist` contendo todo seu site em arquivos estáticos.\n\n- Entre na pasta `dist` gerada e renomeie o arquivo html para `vite.html`;\n- Compacte todo o conteúdo da pasta `dist`, sendo o arquivo vite.html e demais arquivos e pastas que tem junto a ele.\n\nLembrando que a compactação deve ser feita compactando como `.zip`.\n\nApós feito estes passos, você pode anexar o zip e apenas configurar nome, arquivo principal(vite.html) e marcar a opção \"Publicar na Web\" e informe o subdomínio que deseja usar.\n\n## Envio com build no ambiente\n\nEsta forma de envio requer primeiramente que modifique seu arquivo `package.json` transferindo todas as dependências de desenmvolvimento,\r\n\"devdependencies\", para as dependências, \"dependencies\". Esta organização, se deve ao fato de que, por se tratar de um ambiente de produção,\r\nnão são instaladas nenhuma dependência de desenvolvimento.\n\nAinda em seu `package.json`, informe o script de \"preview\" como `vite preview --host 0.0.0.0 --port 80`. Esta mudança faz com que\r\no webserver vite, seja aberto em todas as interfaces de rede e porta 80(http), possibilitando seu roteamento para a 443(https).\n\nCompacte sua aplicação incluindo todos os arquivos necessários para sua execução, ou seja, não inclua os arquivos citados nos tópicos anteriores.\r\nNo momento de envio, marque a opção de publicar na web e marque a opção de comando de inicialização, informando respectivamente o subdomínio desejado e\r\nos comandos `npm run build && npm run preview`.\n"
    },
    "WZKgzoWHvOBK": {
      "id": "WZKgzoWHvOBK",
      "path": "troubleshooting/apps/dependencies/better-sqlite3/binding-file",
      "author": {
        "name": "Square Cloud"
      },
      "metadata": {
        "title": "Resolvendo 'Não foi possível localizar o arquivo de vínculos'",
        "description": "Aprenda como resolver o problema 'Não foi possível localizar o arquivo de vínculos' em seu aplicativo.",
        "slug": "resolvendo-nao-foi-possivel-localizar-o-arquivo-de-vinculos"
      },
      "created_at": "2025-05-30T20:03:16.000Z",
      "updated_at": "2025-05-31T02:31:10.000Z",
      "content": "## Quando isso ocorre?\n\nEsse problema acontece quando a biblioteca `better-sqlite3` ou uma biblioteca que depende dela, como `quick.db`, não está atualizada.\n\n```bash\nError: Could not locate the bindings file. Tried:\r\n → /application/node_modules/better-sqlite3/build/better_sqlite3.node\r\n [...]\n```\n\n## Por que isso ocorre?\n\nEsse erro ocorre porque a biblioteca `better-sqlite3` não foi atualizada para a versão mais recente. Nas versões **11.x.x e anteriores** do `better-sqlite3`, a biblioteca **não era compatível com o Node.js LTS v22**.x.x.\n\n## Como corrigir\n\nPara corrigir esse problema, você precisa atualizar a biblioteca `better-sqlite3` para a versão mais recente. Lembre-se de atualizar também as bibliotecas que dependem do `better-sqlite3`, como o `quick.db`.\n\n### Verificar as últimas versões das bibliotecas:\n\n- [npm better-sqlite3](https://www.npmjs.com/package/better-sqlite3)\n- [npm quick.db](https://www.npmjs.com/package/quick.db)\n\n### Atualizar o `better-sqlite3` no seu `package.json`\n\nDepois de verificar a versão mais recente da biblioteca, você pode atualizá-la no seu `package.json`. Por exemplo, se a versão atual for 11.10.0, você pode usar o seguinte:\n\n```json Atualizar manualmente no seu package.json\n\"better-sqlite3\": \"^11.10.0\",\r\n\"quick.db\": \"^9.1.7\" // ou qualquer outra biblioteca que dependa do better-sqlite3\n```\n\n```bash Atualizar usando o terminal\nnpm install better-sqlite3@latest\n```\n\n### Remover arquivos para uma instalação limpa\n\nApós atualizar o seu `package.json`, você deve remover os arquivos e pastas: `node_modules`, `package-lock.json` e a pasta `.npm`.\n\n### Reiniciar sua aplicação\n\nPor fim, simplesmente reinicie sua aplicação clicando no botão azul. Se você seguiu todos os passos corretamente, sua aplicação não deverá mais encontrar esse erro.\n\nSe você continuar enfrentando problemas, não hesite em [entrar em contato com nossa equipe de suporte](https://squarecloud.app/sac).\n"
    }
  },
  "snippets": {
    "_snippets/python-introduction": {
      "path": "_snippets/python-introduction",
      "content": "## 🚀 Introdução\r\n\r\n- Antes de começar, certifique-se de ter o Python instalado no seu sistema. Caso ainda não tenha, você pode baixá-lo no [site oficial do Python](https://www.python.org/).\r\n- Em seguida, você precisará criar uma conta na Square Cloud, o que pode ser feito através da [página de login](https://squarecloud.app/login). Você pode usar seu e-mail para criar sua conta.\r\n- Por fim, é necessário ter um plano pago ativo na sua conta. Você pode visualizar nossos planos e adquirir aquele que melhor atenda às suas necessidades [aqui](https://squarecloud.app/plans).\r\n"
    },
    "_snippets/node-introduction": {
      "path": "_snippets/node-introduction",
      "content": ""
    },
    "_snippets/requirements-txt": {
      "path": "_snippets/requirements-txt",
      "content": "#### 📝 Criando o arquivo requirements.txt\r\n\r\nPara criar seu arquivo requirements.txt, você precisa listar todas as suas dependências no corpo do arquivo.\r\nVeja como ficaria ele possuindo as dependências Flask e waitress.\r\n\r\n\r\nflask\r\nwaitress\r\n\r\n\r\nNote que apenas listando assim, o gerenciador de pacotes instalará a versão mais recente do pacote. \r\nCaso queira uma versão específica, passe dois sinais de igual e o numero da versão correspondente.\r\n\r\nflask==3.1.0\r\nwaitress==3.0.2\r\n\r\n\r\nSe você utilizar do comando `pip freeze`, serão listados além da suas dependências, as dependências delas.\r\nExemplificando, se você possui o `discord-py` instalado como dependência, o pip listará o `aiohttp` que é uma dependência da \r\nbiblioteca discord-py. Isso gera um arquivo mais extenso desnecessáriamente e se utilizado no ambiente global, pode haver \r\ndependências desnecessárias vindas de outros projetos."
    }
  }
}