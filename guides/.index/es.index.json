{
  "articles": {
    "EXynVFQcvkkg": {
      "id": "EXynVFQcvkkg",
      "path": "deploys/how-to-deploy-vite",
      "metadata": {},
      "updated_at": "2025-12-31",
      "content": "title: \"Alojando tu sitio web Vite\" description: \"Aprende a alojar tu aplicaci√≥n Vite\" updatedAt: 2025-05-27  import { pages } from \"../\\_snippets/pages.mdx\"  üöÄ Introducci√≥n  Necesitar√°s crear una cuenta en Square Cloud, lo cual puedes hacer desde la p√°gina de inicio de sesi√≥n. Puedes usar tu correo electr√≥nico, Discord o ambos para crear tu cuenta.  Finalmente, debes tener un plan de pago activo en tu cuenta. Puedes ver nuestros planes y adquirir el que mejor se adapte a tus necesidades aqu√≠.  üíª Preparando la aplicaci√≥n  Actualmente, existen dos formas de alojar sitios web gestionados por Vite: usando el comando vite preview o haciendo un build local y subiendo solo los archivos est√°ticos. Ambas formas se explican a continuaci√≥n.  üóëÔ∏è Archivos innecesarios  Dependiendo del m√©todo de carga, tendr√°s archivos espec√≠ficos para incluir. Sin embargo, en general, los siguientes archivos nunca deben subirse con tu aplicaci√≥n:  node\\_modules;  package-lock.json.  Subida con build local  Este m√©todo requiere primero construir tu aplicaci√≥n Vite localmente. Para ello:  Abre la terminal en la ra√≠z de tu proyecto;  Ejecuta el comando npm run build, que ejecutar√° el script build definido en tu package.json, normalmente vite build;  Esto generar√° la carpeta dist que contiene tu sitio como archivos est√°ticos.  Ingresa a la carpeta dist generada y cambia el nombre del archivo HTML a vite.html;  Comprime todo el contenido de la carpeta dist, incluyendo vite.html y los dem√°s archivos y carpetas.  La compresi√≥n debe realizarse en formato .zip.  Luego, puedes subir el archivo ZIP, configurar el nombre, el archivo principal (vite.html), marcar la opci√≥n \"Publicar en la web\" e ingresar el subdominio deseado.  Subida con build en el entorno  Este m√©todo requiere que modifiques tu package.json, moviendo todas las dependencias de desarrollo (devDependencies) a las dependencias normales (dependencies). Esto es necesario porque en el entorno de producci√≥n no se instalan dependencias de desarrollo.  Adem√°s, en tu package.json, configura el script \"preview\" como vite preview --host 0.0.0.0 --port 80 Esto hace que el servidor de Vite est√© disponible en todas las interfaces de red en el puerto 80 (HTTP), lo que permite el enrutamiento hacia el puerto 443 (HTTPS).  Comprime tu aplicaci√≥n incluyendo todos los archivos necesarios para su ejecuci√≥n, excepto los archivos innecesarios previamente mencionados.  En el momento de la subida, marca la opci√≥n \"Publicar en la web\" y tambi√©n \"Comando de inicio\", ingresando el subdominio deseado y el siguiente comando npm run build && npm run preview "
    }
  },
  "snippets": [
    {
      "path": "guides/_snippets/node-introduction",
      "slug": "_snippets/node-introduction",
      "availableLanguages": [
        "pt-br"
      ]
    },
    {
      "path": "guides/_snippets/python-introduction",
      "slug": "_snippets/python-introduction",
      "availableLanguages": [
        "pt-br"
      ]
    },
    {
      "path": "guides/_snippets/requirements-txt",
      "slug": "_snippets/requirements-txt",
      "availableLanguages": [
        "en",
        "es",
        "pt-br",
        "zh"
      ]
    }
  ]
}